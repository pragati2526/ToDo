{"ast":null,"code":"var _jsxFileName = \"/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport './ToDoStyle.css';\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\"; // import DetailedCard from \"./DetailedCard\";\n\nimport ITEM_TYPE from \"./data/types.js\";\nimport { Container, Row, Col, Form, FloatingLabel, Button } from 'react-bootstrap';\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nconst ToDo = ({\n  item,\n  index,\n  moveItem,\n  status\n}) => {\n  _s();\n\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: ITEM_TYPE,\n\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoveredRect = ref.current.getBoundingClientRect();\n      const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n      const mousePosition = monitor.getClientOffset();\n      const hoverClientY = mousePosition.y - hoveredRect.top;\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      moveItem(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ITEM_TYPE,\n    item: {\n      type: ITEM_TYPE,\n      ...item,\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [show, setShow] = useState(false);\n\n  const onOpen = () => setShow(true);\n\n  const onClose = () => setShow(false);\n\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      style: {\n        opacity: isDragging ? 0 : 1\n      },\n      className: \"todo box\",\n      onClick: onOpen,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DetailedCard, {\n      show: show,\n      onClose: onClose,\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDo, \"rF6lY0o2hFLpxncNahbNMfU9l3Q=\", false, function () {\n  return [useDrop, useDrag];\n});\n\n_c = ToDo;\nexport default ToDo; // const ToDo = ({todo}) => {\n//     // const handleClick = (e) => {\n//     //     e.preventDefault()\n//     //     handleToggle(e.currentTarget.id)\n//     // }\n//    return (\n//     <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} className=\"todo box\">\n//     {todo.task}\n//     </div>\n//    );\n// };\n// export default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/ToDo.js"],"names":["React","Fragment","useState","useRef","useDrag","useDrop","ITEM_TYPE","Container","Row","Col","Form","FloatingLabel","Button","Modal","setAppElement","ToDo","item","index","moveItem","status","ref","drop","accept","hover","monitor","current","dragIndex","hoverIndex","hoveredRect","getBoundingClientRect","hoverMiddleY","bottom","top","mousePosition","getClientOffset","hoverClientY","y","isDragging","drag","type","collect","show","setShow","onOpen","onClose","opacity","title"],"mappings":"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","sourcesContent":["import './ToDoStyle.css';\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n// import DetailedCard from \"./DetailedCard\";\nimport ITEM_TYPE from \"./data/types.js\";\nimport {Container,Row,Col,Form,FloatingLabel,Button} from 'react-bootstrap';\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst ToDo = ({ item, index, moveItem,status}) => {\n    const ref = useRef(null);\n\n    const [, drop] = useDrop({\n        accept: ITEM_TYPE,\n        hover(item, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n\n            if (dragIndex === hoverIndex) {\n                return\n            }\n\n            const hoveredRect = ref.current.getBoundingClientRect();\n            const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n            const mousePosition = monitor.getClientOffset();\n            const hoverClientY = mousePosition.y - hoveredRect.top;\n\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            moveItem(dragIndex, hoverIndex);\n            item.index = hoverIndex;\n        },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n        type: ITEM_TYPE,\n        item: { type: ITEM_TYPE, ...item, index },\n        collect: monitor => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    const [show, setShow] = useState(false);\n\n    const onOpen = () => setShow(true);\n\n    const onClose = () => setShow(false);\n\n    drag(drop(ref));\n\n    return (\n        <Fragment>\n            <div\n                ref={ref}\n                style={{ opacity: isDragging ? 0 : 1 }}\n                className={\"todo box\"}\n                onClick={onOpen}\n            >\n                <p>{item.title}</p>\n                {/* <div className={\"color-bar\"} style={{ backgroundColor: status.color }}/>\n                <p className={\"item-title\"}>{item.content}</p>\n                <p className={\"item-status\"}>{item.icon}</p> */}\n            </div>\n            <DetailedCard\n                show={show}\n                onClose={onClose}\n                item={item}\n            />\n        </Fragment>\n    );\n};\n\nexport default ToDo;\n\n// const ToDo = ({todo}) => {\n//     // const handleClick = (e) => {\n//     //     e.preventDefault()\n//     //     handleToggle(e.currentTarget.id)\n//     // }\n\n\n\n//    return (\n//     <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} className=\"todo box\">\n//     {todo.task}\n//     </div>\n//    );\n// };\n \n// export default ToDo;"]},"metadata":{},"sourceType":"module"}