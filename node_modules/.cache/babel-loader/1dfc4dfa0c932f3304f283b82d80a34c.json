{"ast":null,"code":"var _jsxFileName = \"/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import data from './data.json';\n// import ToDoList from \"./ToDoList\";\n\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport Col from \"./Col\"; // import {Container,Row,Col} from 'react-bootstrap';\n\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Title = () => {\n  _s();\n\n  const [items, setItems] = useState(data);\n\n  const addTask = userInput => {\n    let copy = [...items];\n    copy = [...copy, {\n      id: items.length + 1,\n      status: \"ToDo\",\n      title: userInput\n    }];\n    setItems(copy);\n  };\n\n  const onDrop = (item, monitor, status) => {\n    const mapping = statuses.find(si => si.status === status);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({ ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems(prevState => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: statuses.map(s => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"col-header\",\n            children: s.status.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DropWrapper, {\n            onDrop: onDrop,\n            status: s.status,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: items.filter(i => i.status === s.status).map((i, idx) => /*#__PURE__*/_jsxDEV(ToDo, {\n                item: i,\n                index: idx,\n                moveItem: moveItem,\n                status: s\n              }, i.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 54\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, s.status, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(Title, \"Uq/YoZ43CBi40+7C5uYosmevsXU=\");\n\n_c = Title;\nexport default Title; // export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js"],"names":["React","useState","ToDo","ToDoForm","DropWrapper","Col","data","statuses","Title","items","setItems","addTask","userInput","copy","id","length","status","title","onDrop","item","monitor","mapping","find","si","prevState","newItems","filter","i","concat","icon","moveItem","dragIndex","hoverIndex","idx","splice","map","s","toUpperCase"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\n// import data from './data.json';\n// import ToDoList from \"./ToDoList\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport Col from \"./Col\";\n\n// import {Container,Row,Col} from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\n\nconst Title = () => {\n  const [items, setItems] = useState(data);\n  const addTask = (userInput ) => {\n          let copy = [...items];\n          copy = [...copy, { \n              id: items.length + 1,\n              status: \"ToDo\",\n              title: userInput}];\n          setItems(copy);\n        }\n\n  const onDrop = (item, monitor, status) => {\n      const mapping = statuses.find(si => si.status === status);\n\n      setItems(prevState => {\n          const newItems = prevState\n              .filter(i => i.id !== item.id)\n              .concat({ ...item, status, icon: mapping.icon });\n          return [ ...newItems ];\n      });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n      const item = items[dragIndex];\n      setItems(prevState => {\n          const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n          newItems.splice(hoverIndex, 0, item);\n          return  [ ...newItems ];\n      });\n  };\n\n  return (\n      <>\n       <div className={\"row\"}>\n            {statuses.map(s => {\n                return (\n                    <div key={s.status} className={\"col-wrapper\"}>\n                        <h2 className={\"col-header\"}>{s.status.toUpperCase()}</h2>\n                        <DropWrapper onDrop={onDrop} status={s.status}>\n                            <Col>\n                                {items\n                                    .filter(i => i.status === s.status)\n                                    .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n                                }\n                            </Col>\n                        </DropWrapper>\n                    </div>\n                );\n            })}\n        </div>\n\n        {/* <Container fluid style={{backgroundColor:\"#4D4D5C\",padding:\"30px\"}}> \n          <Row> \n          {statuses.map(s => {\n              return (\n                        <> \n                            <div className='align-items-center mx-auto' style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"5px\",margin:\"10px\"}}>\n                                <div key={s.status}>\n                                   <h1 style={{color:\"white\",backgroundColor:\"#4D4D5C\",borderRadius: \"21px\",textAlign:\"center\"}}>{s.status}  {s.icon}</h1>\n                                   <DropWrapper onDrop={onDrop} status={s.status}>\n                                    <div >\n                                        {items\n                                            .filter(i => i.status === s.status)\n                                            .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n                                        }      \n                                    </div>\n                                    </DropWrapper>\n                                </div>\n                            </div> \n                        </>\n                    );\n                })}\n            <div className=\"mx-auto\" style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"5px\",margin:\"0px\"}}>  \n          <ToDoForm addTask={addTask}/>\n     \n\n </Row>\n       </Container>   */}\n          </>\n   \n  )};\n\nexport default Title;\n\n// export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n    \n\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}