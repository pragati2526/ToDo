{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\n\nexport function useAccept(spec) {\n  var accept = spec.accept;\n  return useMemo(function () {\n    invariant(spec.accept != null, 'accept must be defined');\n    return Array.isArray(accept) ? accept : [accept];\n  }, [accept]);\n}","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/node_modules/react-dnd/dist/esm/hooks/useDrop/useAccept.js"],"names":["invariant","useMemo","useAccept","spec","accept","Array","isArray"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,SAAOH,OAAO,CAAC,YAAY;AACzBD,IAAAA,SAAS,CAACG,IAAI,CAACC,MAAL,IAAe,IAAhB,EAAsB,wBAAtB,CAAT;AACA,WAAOC,KAAK,CAACC,OAAN,CAAcF,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAAxC;AACD,GAHa,EAGX,CAACA,MAAD,CAHW,CAAd;AAID","sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\n\nexport function useAccept(spec) {\n  var accept = spec.accept;\n  return useMemo(function () {\n    invariant(spec.accept != null, 'accept must be defined');\n    return Array.isArray(accept) ? accept : [accept];\n  }, [accept]);\n}"]},"metadata":{},"sourceType":"module"}