{"ast":null,"code":"import { nativeTypesConfig } from './nativeTypesConfig';\nimport { NativeDragSource } from './NativeDragSource';\nexport function createNativeDragSource(type, dataTransfer) {\n  var result = new NativeDragSource(nativeTypesConfig[type]);\n  result.loadDataTransfer(dataTransfer);\n  return result;\n}\nexport function matchNativeItemType(dataTransfer) {\n  if (!dataTransfer) {\n    return null;\n  }\n\n  var dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || []);\n  return Object.keys(nativeTypesConfig).filter(function (nativeItemType) {\n    var matchesTypes = nativeTypesConfig[nativeItemType].matchesTypes;\n    return matchesTypes.some(function (t) {\n      return dataTransferTypes.indexOf(t) > -1;\n    });\n  })[0] || null;\n}","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/node_modules/react-dnd-html5-backend/dist/esm/NativeDragSources/index.js"],"names":["nativeTypesConfig","NativeDragSource","createNativeDragSource","type","dataTransfer","result","loadDataTransfer","matchNativeItemType","dataTransferTypes","Array","prototype","slice","call","types","Object","keys","filter","nativeItemType","matchesTypes","some","t","indexOf"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAsCC,YAAtC,EAAoD;AACzD,MAAIC,MAAM,GAAG,IAAIJ,gBAAJ,CAAqBD,iBAAiB,CAACG,IAAD,CAAtC,CAAb;AACAE,EAAAA,MAAM,CAACC,gBAAP,CAAwBF,YAAxB;AACA,SAAOC,MAAP;AACD;AACD,OAAO,SAASE,mBAAT,CAA6BH,YAA7B,EAA2C;AAChD,MAAI,CAACA,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAII,iBAAiB,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BR,YAAY,CAACS,KAAb,IAAsB,EAAjD,CAAxB;AACA,SAAOC,MAAM,CAACC,IAAP,CAAYf,iBAAZ,EAA+BgB,MAA/B,CAAsC,UAAUC,cAAV,EAA0B;AACrE,QAAIC,YAAY,GAAGlB,iBAAiB,CAACiB,cAAD,CAAjB,CAAkCC,YAArD;AACA,WAAOA,YAAY,CAACC,IAAb,CAAkB,UAAUC,CAAV,EAAa;AACpC,aAAOZ,iBAAiB,CAACa,OAAlB,CAA0BD,CAA1B,IAA+B,CAAC,CAAvC;AACD,KAFM,CAAP;AAGD,GALM,EAKJ,CALI,KAKE,IALT;AAMD","sourcesContent":["import { nativeTypesConfig } from './nativeTypesConfig';\nimport { NativeDragSource } from './NativeDragSource';\nexport function createNativeDragSource(type, dataTransfer) {\n  var result = new NativeDragSource(nativeTypesConfig[type]);\n  result.loadDataTransfer(dataTransfer);\n  return result;\n}\nexport function matchNativeItemType(dataTransfer) {\n  if (!dataTransfer) {\n    return null;\n  }\n\n  var dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || []);\n  return Object.keys(nativeTypesConfig).filter(function (nativeItemType) {\n    var matchesTypes = nativeTypesConfig[nativeItemType].matchesTypes;\n    return matchesTypes.some(function (t) {\n      return dataTransferTypes.indexOf(t) > -1;\n    });\n  })[0] || null;\n}"]},"metadata":{},"sourceType":"module"}