{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { isFunction, noop } from './utils';\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\n\nexport var Disposable = /*#__PURE__*/function () {\n  function Disposable(action) {\n    _classCallCheck(this, Disposable);\n\n    _defineProperty(this, \"isDisposed\", false);\n\n    _defineProperty(this, \"action\", void 0);\n\n    this.action = isFunction(action) ? action : noop;\n  }\n  /** Performs the task of cleaning up resources. */\n\n\n  _createClass(Disposable, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.action();\n        this.isDisposed = true;\n      }\n    }\n  }], [{\n    key: \"isDisposable\",\n    value:\n    /**\n     * Gets the disposable that does nothing when disposed.\n     */\n\n    /**\n     * Validates whether the given object is a disposable\n     * @param {Object} Object to test whether it has a dispose method\n     * @returns {Boolean} true if a disposable object, else false.\n     */\n    function isDisposable(d) {\n      return Boolean(d && isFunction(d.dispose));\n    }\n  }, {\n    key: \"_fixup\",\n    value: function _fixup(result) {\n      return Disposable.isDisposable(result) ? result : Disposable.empty;\n    }\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(action) {\n      return new Disposable(action);\n    }\n  }]);\n\n  return Disposable;\n}();\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\n\n_defineProperty(Disposable, \"empty\", {\n  dispose: noop\n});\n\nexport var CompositeDisposable = /*#__PURE__*/function () {\n  function CompositeDisposable() {\n    _classCallCheck(this, CompositeDisposable);\n\n    _defineProperty(this, \"isDisposed\", false);\n\n    _defineProperty(this, \"disposables\", void 0);\n\n    for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\n      disposables[_key] = arguments[_key];\n    }\n\n    this.disposables = disposables;\n  }\n  /**\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n   * @param {Any} item Disposable to add.\n   */\n\n\n  _createClass(CompositeDisposable, [{\n    key: \"add\",\n    value: function add(item) {\n      if (this.isDisposed) {\n        item.dispose();\n      } else {\n        this.disposables.push(item);\n      }\n    }\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var shouldDispose = false;\n\n      if (!this.isDisposed) {\n        var idx = this.disposables.indexOf(item);\n\n        if (idx !== -1) {\n          shouldDispose = true;\n          this.disposables.splice(idx, 1);\n          item.dispose();\n        }\n      }\n\n      return shouldDispose;\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (!this.isDisposed) {\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i = 0; _i < len; _i++) {\n          currentDisposables[_i].dispose();\n        }\n      }\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i2 = 0; _i2 < len; _i2++) {\n          currentDisposables[_i2].dispose();\n        }\n      }\n    }\n  }]);\n\n  return CompositeDisposable;\n}();\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\n\nexport var SerialDisposable = /*#__PURE__*/function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    _defineProperty(this, \"isDisposed\", false);\n\n    _defineProperty(this, \"current\", void 0);\n  }\n\n  _createClass(SerialDisposable, [{\n    key: \"getDisposable\",\n    value:\n    /**\n     * Gets the underlying disposable.\n     * @returns {Any} the underlying disposable.\n     */\n    function getDisposable() {\n      return this.current;\n    }\n  }, {\n    key: \"setDisposable\",\n    value: function setDisposable(value) {\n      var shouldDispose = this.isDisposed;\n\n      if (!shouldDispose) {\n        var old = this.current;\n        this.current = value;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n\n      if (shouldDispose && value) {\n        value.dispose();\n      }\n    }\n    /** Performs the task of cleaning up resources. */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var old = this.current;\n        this.current = undefined;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n    }\n  }]);\n\n  return SerialDisposable;\n}();","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/node_modules/react-dnd/dist/esm/decorators/disposables.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","isFunction","noop","Disposable","action","dispose","isDisposed","isDisposable","d","Boolean","_fixup","result","empty","create","CompositeDisposable","_len","arguments","disposables","Array","_key","add","item","push","remove","shouldDispose","idx","indexOf","splice","clear","len","currentDisposables","_i","_i2","SerialDisposable","getDisposable","current","setDisposable","old","undefined"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { isFunction, noop } from './utils';\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\n\nexport var Disposable = /*#__PURE__*/function () {\n  function Disposable(action) {\n    _classCallCheck(this, Disposable);\n\n    _defineProperty(this, \"isDisposed\", false);\n\n    _defineProperty(this, \"action\", void 0);\n\n    this.action = isFunction(action) ? action : noop;\n  }\n  /** Performs the task of cleaning up resources. */\n\n\n  _createClass(Disposable, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.action();\n        this.isDisposed = true;\n      }\n    }\n  }], [{\n    key: \"isDisposable\",\n    value:\n    /**\n     * Gets the disposable that does nothing when disposed.\n     */\n\n    /**\n     * Validates whether the given object is a disposable\n     * @param {Object} Object to test whether it has a dispose method\n     * @returns {Boolean} true if a disposable object, else false.\n     */\n    function isDisposable(d) {\n      return Boolean(d && isFunction(d.dispose));\n    }\n  }, {\n    key: \"_fixup\",\n    value: function _fixup(result) {\n      return Disposable.isDisposable(result) ? result : Disposable.empty;\n    }\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(action) {\n      return new Disposable(action);\n    }\n  }]);\n\n  return Disposable;\n}();\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\n\n_defineProperty(Disposable, \"empty\", {\n  dispose: noop\n});\n\nexport var CompositeDisposable = /*#__PURE__*/function () {\n  function CompositeDisposable() {\n    _classCallCheck(this, CompositeDisposable);\n\n    _defineProperty(this, \"isDisposed\", false);\n\n    _defineProperty(this, \"disposables\", void 0);\n\n    for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\n      disposables[_key] = arguments[_key];\n    }\n\n    this.disposables = disposables;\n  }\n  /**\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n   * @param {Any} item Disposable to add.\n   */\n\n\n  _createClass(CompositeDisposable, [{\n    key: \"add\",\n    value: function add(item) {\n      if (this.isDisposed) {\n        item.dispose();\n      } else {\n        this.disposables.push(item);\n      }\n    }\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var shouldDispose = false;\n\n      if (!this.isDisposed) {\n        var idx = this.disposables.indexOf(item);\n\n        if (idx !== -1) {\n          shouldDispose = true;\n          this.disposables.splice(idx, 1);\n          item.dispose();\n        }\n      }\n\n      return shouldDispose;\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (!this.isDisposed) {\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i = 0; _i < len; _i++) {\n          currentDisposables[_i].dispose();\n        }\n      }\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i2 = 0; _i2 < len; _i2++) {\n          currentDisposables[_i2].dispose();\n        }\n      }\n    }\n  }]);\n\n  return CompositeDisposable;\n}();\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\n\nexport var SerialDisposable = /*#__PURE__*/function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    _defineProperty(this, \"isDisposed\", false);\n\n    _defineProperty(this, \"current\", void 0);\n  }\n\n  _createClass(SerialDisposable, [{\n    key: \"getDisposable\",\n    value:\n    /**\n     * Gets the underlying disposable.\n     * @returns {Any} the underlying disposable.\n     */\n    function getDisposable() {\n      return this.current;\n    }\n  }, {\n    key: \"setDisposable\",\n    value: function setDisposable(value) {\n      var shouldDispose = this.isDisposed;\n\n      if (!shouldDispose) {\n        var old = this.current;\n        this.current = value;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n\n      if (shouldDispose && value) {\n        value.dispose();\n      }\n    }\n    /** Performs the task of cleaning up resources. */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var old = this.current;\n        this.current = undefined;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n    }\n  }]);\n\n  return SerialDisposable;\n}();"]},"metadata":{},"sourceType":"module"}