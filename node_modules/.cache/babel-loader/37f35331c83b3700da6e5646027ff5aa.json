{"ast":null,"code":"var _jsxFileName = \"/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport data from './data.json';\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from './ToDoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Title({\n  title\n}) {\n  _s();\n\n  const [toDoList, setToDoList] = useState(data);\n\n  const handleToggle = id => {\n    let mapped = toDoList.map(task => {\n      return task.id === id ? { ...task,\n        complete: !task.complete\n      } : { ...task\n      };\n    });\n    setToDoList(mapped);\n  };\n\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered);\n  };\n\n  const addTask = userInput => {\n    let copy = [...toDoList];\n    copy = [...copy, {\n      id: toDoList.length + 1,\n      task: userInput,\n      complete: false\n    }];\n    setToDoList(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#4D4D5C\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"white\"\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      toDoList: toDoList,\n      handleToggle: handleToggle,\n      handleFilter: handleFilter,\n      style: {\n        alignText\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Title, \"CrnkRfLuWqje/f4mH+mQmMdXvoM=\");\n\n_c = Title;\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js"],"names":["React","useState","data","ToDoList","ToDoForm","Title","title","toDoList","setToDoList","handleToggle","id","mapped","map","task","complete","handleFilter","filtered","filter","addTask","userInput","copy","length","backgroundColor","color","alignText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAwB;AAAA;;AACnC,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAACC,IAAD,CAA1C;;AACA,QAAMO,YAAY,GAAIC,EAAD,IAAQ;AACzB,QAAIC,MAAM,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,IAAI;AAChC,aAAOA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGG,IAAL;AAAWC,QAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA3B,OAAjB,GAAyD,EAAE,GAAGD;AAAL,OAAhE;AACD,KAFY,CAAb;AAGAL,IAAAA,WAAW,CAACG,MAAD,CAAX;AACD,GALH;;AAOA,QAAMI,YAAY,GAAG,MAAM;AACzB,QAAIC,QAAQ,GAAGT,QAAQ,CAACU,MAAT,CAAgBJ,IAAI,IAAI;AACrC,aAAO,CAACA,IAAI,CAACC,QAAb;AACD,KAFc,CAAf;AAGAN,IAAAA,WAAW,CAACQ,QAAD,CAAX;AACD,GALD;;AAMA,QAAME,OAAO,GAAIC,SAAD,IAAgB;AAC9B,QAAIC,IAAI,GAAG,CAAC,GAAGb,QAAJ,CAAX;AACAa,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU;AAAEV,MAAAA,EAAE,EAAEH,QAAQ,CAACc,MAAT,GAAkB,CAAxB;AAA2BR,MAAAA,IAAI,EAAEM,SAAjC;AAA4CL,MAAAA,QAAQ,EAAE;AAAtD,KAAV,CAAP;AACAN,IAAAA,WAAW,CAACY,IAAD,CAAX;AACD,GAJD;;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAAZ;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA,gBAA6BjB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC,QAApB;AAA8B,MAAA,YAAY,EAAEE,YAA5C;AAA0D,MAAA,YAAY,EAAEM,YAAxE;AAAsF,MAAA,KAAK,EAAE;AAACS,QAAAA;AAAD;AAA7F;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA7BuBb,K;;KAAAA,K","sourcesContent":["import React,{ useState } from 'react'\nimport data from './data.json';\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from './ToDoForm';\n\nexport default function Title({title}) {\n    const [ toDoList, setToDoList ] = useState(data);\n    const handleToggle = (id) => {\n        let mapped = toDoList.map(task => {\n          return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n        });\n        setToDoList(mapped);\n      }\n\n    const handleFilter = () => {\n      let filtered = toDoList.filter(task => {\n        return !task.complete;\n      });\n      setToDoList(filtered);\n    }\n    const addTask = (userInput ) => {\n      let copy = [...toDoList];\n      copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n      setToDoList(copy);\n    }\n    \n\n    return (\n        <div style={{backgroundColor:\"#4D4D5C\"}}>\n            <h1 style={{color:\"white\"}}>{title}</h1>\n            <ToDoList toDoList={toDoList} handleToggle={handleToggle} handleFilter={handleFilter} style={{alignText}}/>\n            <ToDoForm addTask={addTask}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}