{"ast":null,"code":"// cheap lodash replacements\nexport function memoize(fn) {\n  var result = null;\n\n  var memoized = function memoized() {\n    if (result == null) {\n      result = fn();\n    }\n\n    return result;\n  };\n\n  return memoized;\n}\n/**\n * drop-in replacement for _.without\n */\n\nexport function without(items, item) {\n  return items.filter(function (i) {\n    return i !== item;\n  });\n}\nexport function union(itemsA, itemsB) {\n  var set = new Set();\n\n  var insertItem = function insertItem(item) {\n    return set.add(item);\n  };\n\n  itemsA.forEach(insertItem);\n  itemsB.forEach(insertItem);\n  var result = [];\n  set.forEach(function (key) {\n    return result.push(key);\n  });\n  return result;\n}","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/node_modules/react-dnd-html5-backend/dist/esm/utils/js_utils.js"],"names":["memoize","fn","result","memoized","without","items","item","filter","i","union","itemsA","itemsB","set","Set","insertItem","add","forEach","key","push"],"mappings":"AAAA;AACA,OAAO,SAASA,OAAT,CAAiBC,EAAjB,EAAqB;AAC1B,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC,QAAID,MAAM,IAAI,IAAd,EAAoB;AAClBA,MAAAA,MAAM,GAAGD,EAAE,EAAX;AACD;;AAED,WAAOC,MAAP;AACD,GAND;;AAQA,SAAOC,QAAP;AACD;AACD;AACA;AACA;;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AACnC,SAAOD,KAAK,CAACE,MAAN,CAAa,UAAUC,CAAV,EAAa;AAC/B,WAAOA,CAAC,KAAKF,IAAb;AACD,GAFM,CAAP;AAGD;AACD,OAAO,SAASG,KAAT,CAAeC,MAAf,EAAuBC,MAAvB,EAA+B;AACpC,MAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;;AAEA,MAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBR,IAApB,EAA0B;AACzC,WAAOM,GAAG,CAACG,GAAJ,CAAQT,IAAR,CAAP;AACD,GAFD;;AAIAI,EAAAA,MAAM,CAACM,OAAP,CAAeF,UAAf;AACAH,EAAAA,MAAM,CAACK,OAAP,CAAeF,UAAf;AACA,MAAIZ,MAAM,GAAG,EAAb;AACAU,EAAAA,GAAG,CAACI,OAAJ,CAAY,UAAUC,GAAV,EAAe;AACzB,WAAOf,MAAM,CAACgB,IAAP,CAAYD,GAAZ,CAAP;AACD,GAFD;AAGA,SAAOf,MAAP;AACD","sourcesContent":["// cheap lodash replacements\nexport function memoize(fn) {\n  var result = null;\n\n  var memoized = function memoized() {\n    if (result == null) {\n      result = fn();\n    }\n\n    return result;\n  };\n\n  return memoized;\n}\n/**\n * drop-in replacement for _.without\n */\n\nexport function without(items, item) {\n  return items.filter(function (i) {\n    return i !== item;\n  });\n}\nexport function union(itemsA, itemsB) {\n  var set = new Set();\n\n  var insertItem = function insertItem(item) {\n    return set.add(item);\n  };\n\n  itemsA.forEach(insertItem);\n  itemsB.forEach(insertItem);\n  var result = [];\n  set.forEach(function (key) {\n    return result.push(key);\n  });\n  return result;\n}"]},"metadata":{},"sourceType":"module"}