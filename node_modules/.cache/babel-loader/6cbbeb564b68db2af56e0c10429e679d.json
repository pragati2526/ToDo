{"ast":null,"code":"var _jsxFileName = \"/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import data from './data.json';\n// import ToDoList from \"./ToDoList\";\n\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = ({\n  title\n}) => {\n  _s();\n\n  const [items, setItems] = useState(data);\n\n  const addTask = userInput => {\n    let copy = [...items];\n    copy = [...copy, {\n      id: items.length + 1,\n      task: userInput,\n      complete: false\n    }];\n    setItems(copy);\n  };\n\n  const onDrop = (item, monitor, status) => {\n    const mapping = statuses.find(si => si.status === status);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({ ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems(prevState => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //   <Container>\n    //   <Row>\n    //       {statuses.map(s => {\n    //           return (\n    //                       <>\n    //                       <div key={s.status}></div>\n    //     <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n    //     <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n    //     <DropWrapper onDrop={onDrop} status={s.status}>\n    //                       <Col>\n    //                           {items\n    //                               .filter(i => i.status === s.status)\n    //                               .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n    //                           }\n    //                       </Col>\n    //                   </DropWrapper>\n    //         <ToDoForm addTask={addTask}/>\n    //     </div>\n    //               {/* <div key={s.status} className={\"col-wrapper\"}>\n    //                   <h2 className={\"col-header\"}>{s.status.toUpperCase()}</h2>\n    //                   <DropWrapper onDrop={onDrop} status={s.status}>\n    //                       <Col>\n    //                           {items\n    //                               .filter(i => i.status === s.status)\n    //                               .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n    //                           }\n    //                       </Col>\n    //                   </DropWrapper>\n    //               </div> */}\n    //               </>\n    //           );\n    //       })}\n    //   </Row>\n    //   </Container>\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"white\",\n            textAlign: \"center\"\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"white\",\n            borderRadius: \"21px\",\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(DropWrapper, {\n            onDrop: onDrop,\n            status: s.status,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: items.filter(i => i.status === \"Open\").map((i, idx) => /*#__PURE__*/_jsxDEV(ToDo, {\n                item: i,\n                index: idx,\n                moveItem: moveItem,\n                status: s\n              }, i.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 53\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n            addTask: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(Title, \"Uq/YoZ43CBi40+7C5uYosmevsXU=\");\n\n_c = Title;\nexport default Title; // export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js"],"names":["React","useState","ToDo","ToDoForm","DropWrapper","Container","Row","Col","data","statuses","Title","title","items","setItems","addTask","userInput","copy","id","length","task","complete","onDrop","item","monitor","status","mapping","find","si","prevState","newItems","filter","i","concat","icon","moveItem","dragIndex","hoverIndex","idx","splice","color","textAlign","backgroundColor","borderRadius","padding","s","map"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\n// import data from './data.json';\n// import ToDoList from \"./ToDoList\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport {Container,Row,Col} from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\n\nconst Title = ({title}) => {\n  const [items, setItems] = useState(data);\n  const addTask = (userInput ) => {\n          let copy = [...items];\n          copy = [...copy, { id: items.length + 1, task: userInput, complete: false }];\n          setItems(copy);\n        }\n\n  const onDrop = (item, monitor, status) => {\n      const mapping = statuses.find(si => si.status === status);\n\n      setItems(prevState => {\n          const newItems = prevState\n              .filter(i => i.id !== item.id)\n              .concat({ ...item, status, icon: mapping.icon });\n          return [ ...newItems ];\n      });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n      const item = items[dragIndex];\n      setItems(prevState => {\n          const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n          newItems.splice(hoverIndex, 0, item);\n          return  [ ...newItems ];\n      });\n  };\n\n  return (\n    //   <Container>\n    //   <Row>\n    //       {statuses.map(s => {\n    //           return (\n    //                       <>\n    //                       <div key={s.status}></div>\n    //     <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n    //     <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n    //     <DropWrapper onDrop={onDrop} status={s.status}>\n    //                       <Col>\n    //                           {items\n    //                               .filter(i => i.status === s.status)\n    //                               .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n    //                           }\n    //                       </Col>\n    //                   </DropWrapper>\n    //         <ToDoForm addTask={addTask}/>\n    //     </div>\n        \n    //               {/* <div key={s.status} className={\"col-wrapper\"}>\n    //                   <h2 className={\"col-header\"}>{s.status.toUpperCase()}</h2>\n    //                   <DropWrapper onDrop={onDrop} status={s.status}>\n    //                       <Col>\n    //                           {items\n    //                               .filter(i => i.status === s.status)\n    //                               .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n    //                           }\n    //                       </Col>\n    //                   </DropWrapper>\n    //               </div> */}\n    //               </>\n    //           );\n    //       })}\n    //   </Row>\n    //   </Container>\n      <Container>\n          <Row>\n              <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n              <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n        <DropWrapper onDrop={onDrop} status={s.status}>\n                           <Col>\n                               {items\n                                  .filter(i => i.status === \"Open\")\n                                   .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n                              }\n                          </Col>\n                      </DropWrapper>\n            <ToDoForm addTask={addTask}/>\n        </div>\n          </Row>\n          <Row>\n              <Col>\n              </Col>\n          </Row>\n          <Row>\n              <Col>\n              </Col>\n          </Row>\n      </Container>\n  );\n};\n\nexport default Title;\n\n// export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n    \n\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}