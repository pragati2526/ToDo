{"ast":null,"code":"var _jsxFileName = \"/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import data from './data.json';\n// import ToDoList from \"./ToDoList\";\n\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Title = () => {\n  _s();\n\n  const [items, setItems] = useState(data);\n\n  const addTask = (e, userInput) => {\n    let copy = [...items];\n    copy = [...copy, {\n      id: items.length + 1,\n      status: \"\",\n      title: userInput\n    }];\n    setItems(copy);\n  };\n\n  const onDrop = (item, monitor, status) => {\n    const mapping = statuses.find(si => si.status === status);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({ ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems(prevState => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        backgroundColor: \"#4D4D5C\",\n        padding: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-auto\",\n        children: statuses.map(s => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, s.status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: \"white\",\n                textAlign: \"center\"\n              },\n              children: s.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(DropWrapper, {\n              onDrop: onDrop,\n              status: s.status,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"white\",\n                  borderRadius: \"21px\",\n                  padding: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: [items.filter(i => i.status === s.status).map((i, idx) => /*#__PURE__*/_jsxDEV(ToDo, {\n                    item: i,\n                    index: idx,\n                    moveItem: moveItem,\n                    status: s\n                  }, i.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 52\n                  }, this)), /*#__PURE__*/_jsxDEV(ToDoForm, {\n                    addTask: addTask\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Title, \"Uq/YoZ43CBi40+7C5uYosmevsXU=\");\n\n_c = Title;\nexport default Title; // export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js"],"names":["React","useState","ToDo","ToDoForm","DropWrapper","Container","Row","Col","data","statuses","Title","items","setItems","addTask","e","userInput","copy","id","length","status","title","onDrop","item","monitor","mapping","find","si","prevState","newItems","filter","i","concat","icon","moveItem","dragIndex","hoverIndex","idx","splice","backgroundColor","padding","map","s","color","textAlign","borderRadius"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\n// import data from './data.json';\n// import ToDoList from \"./ToDoList\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport {Container,Row,Col} from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\n\nconst Title = () => {\n  const [items, setItems] = useState(data);\n  const addTask = (e,userInput ) => {\n          let copy = [...items];\n          copy = [...copy, { \n              id: items.length + 1,\n              status: \"\",\n              title: userInput }];\n          setItems(copy);\n        }\n\n  const onDrop = (item, monitor, status) => {\n      const mapping = statuses.find(si => si.status === status);\n\n      setItems(prevState => {\n          const newItems = prevState\n              .filter(i => i.id !== item.id)\n              .concat({ ...item, status, icon: mapping.icon });\n          return [ ...newItems ];\n      });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n      const item = items[dragIndex];\n      setItems(prevState => {\n          const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n          newItems.splice(hoverIndex, 0, item);\n          return  [ ...newItems ];\n      });\n  };\n\n  return (\n      <>\n        <Container fluid style={{backgroundColor:\"#4D4D5C\",padding:\"30px\"}}> \n          <Row className='mx-auto'> \n          {statuses.map(s => {\n              return (\n                         <> \n                          <div key={s.status}></div>\n        <h1 style={{color:\"white\",textAlign:\"center\"}}>{s.status}</h1>\n        <DropWrapper onDrop={onDrop} status={s.status}>\n        <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n        \n                          <Col>\n                              {items\n                                  .filter(i => i.status === s.status)\n                                  .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n                              }\n                              <ToDoForm addTask={addTask}/>\n                          </Col>\n                     \n        </div>\n        </DropWrapper>\n        </>\n              );\n          })}\n\n </Row>\n       </Container>  \n          </>\n   \n  )};\n\nexport default Title;\n\n// export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n    \n\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}