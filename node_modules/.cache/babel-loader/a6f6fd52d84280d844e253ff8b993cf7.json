{"ast":null,"code":"import { DragDropManagerImpl } from './classes/DragDropManagerImpl';\nimport { createStore } from 'redux';\nimport { reduce } from './reducers';\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl';\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl';\nexport function createDragDropManager(backendFactory) {\n  var globalContext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var backendOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var debugMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var store = makeStoreInstance(debugMode);\n  var monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store));\n  var manager = new DragDropManagerImpl(store, monitor);\n  var backend = backendFactory(manager, globalContext, backendOptions);\n  manager.receiveBackend(backend);\n  return manager;\n}\n\nfunction makeStoreInstance(debugMode) {\n  // TODO: if we ever make a react-native version of this,\n  // we'll need to consider how to pull off dev-tooling\n  var reduxDevTools = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__;\n  return createStore(reduce, debugMode && reduxDevTools && reduxDevTools({\n    name: 'dnd-core',\n    instanceId: 'dnd-core'\n  }));\n}","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/node_modules/dnd-core/dist/esm/createDragDropManager.js"],"names":["DragDropManagerImpl","createStore","reduce","DragDropMonitorImpl","HandlerRegistryImpl","createDragDropManager","backendFactory","globalContext","arguments","length","undefined","backendOptions","debugMode","store","makeStoreInstance","monitor","manager","backend","receiveBackend","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","name","instanceId"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,+BAApC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,OAAO,SAASC,qBAAT,CAA+BC,cAA/B,EAA+C;AACpD,MAAIC,aAAa,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEE,SAAxF;AACA,MAAIC,cAAc,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAzF;AACA,MAAII,SAAS,GAAGJ,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAApF;AACA,MAAIK,KAAK,GAAGC,iBAAiB,CAACF,SAAD,CAA7B;AACA,MAAIG,OAAO,GAAG,IAAIZ,mBAAJ,CAAwBU,KAAxB,EAA+B,IAAIT,mBAAJ,CAAwBS,KAAxB,CAA/B,CAAd;AACA,MAAIG,OAAO,GAAG,IAAIhB,mBAAJ,CAAwBa,KAAxB,EAA+BE,OAA/B,CAAd;AACA,MAAIE,OAAO,GAAGX,cAAc,CAACU,OAAD,EAAUT,aAAV,EAAyBI,cAAzB,CAA5B;AACAK,EAAAA,OAAO,CAACE,cAAR,CAAuBD,OAAvB;AACA,SAAOD,OAAP;AACD;;AAED,SAASF,iBAAT,CAA2BF,SAA3B,EAAsC;AACpC;AACA;AACA,MAAIO,aAAa,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,4BAA5D;AACA,SAAOpB,WAAW,CAACC,MAAD,EAASU,SAAS,IAAIO,aAAb,IAA8BA,aAAa,CAAC;AACrEG,IAAAA,IAAI,EAAE,UAD+D;AAErEC,IAAAA,UAAU,EAAE;AAFyD,GAAD,CAApD,CAAlB;AAID","sourcesContent":["import { DragDropManagerImpl } from './classes/DragDropManagerImpl';\nimport { createStore } from 'redux';\nimport { reduce } from './reducers';\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl';\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl';\nexport function createDragDropManager(backendFactory) {\n  var globalContext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var backendOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var debugMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var store = makeStoreInstance(debugMode);\n  var monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store));\n  var manager = new DragDropManagerImpl(store, monitor);\n  var backend = backendFactory(manager, globalContext, backendOptions);\n  manager.receiveBackend(backend);\n  return manager;\n}\n\nfunction makeStoreInstance(debugMode) {\n  // TODO: if we ever make a react-native version of this,\n  // we'll need to consider how to pull off dev-tooling\n  var reduxDevTools = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__;\n  return createStore(reduce, debugMode && reduxDevTools && reduxDevTools({\n    name: 'dnd-core',\n    instanceId: 'dnd-core'\n  }));\n}"]},"metadata":{},"sourceType":"module"}