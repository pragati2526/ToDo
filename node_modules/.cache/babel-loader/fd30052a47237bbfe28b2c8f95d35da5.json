{"ast":null,"code":"var _jsxFileName = \"/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import data from './data.json';\n// import ToDoList from \"./ToDoList\";\n\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Title = ({\n  status\n}) => {\n  _s();\n\n  const [items, setItems] = useState(data);\n\n  const addTask = userInput => {\n    let copy = [...items];\n    copy = [...copy, {\n      id: items.length + 1,\n      status: \"open\",\n      title: userInput\n    }];\n    setItems(copy);\n  };\n\n  const onDrop = (item, monitor, status) => {\n    const mapping = statuses.find(si => si.status === status);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({ ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems(prevState => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: statuses.map(s => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, s.status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"white\",\n              textAlign: \"center\"\n            },\n            children: s.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"white\",\n              borderRadius: \"21px\",\n              padding: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(DropWrapper, {\n              onDrop: onDrop,\n              status: s.status,\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: items.filter(i => i.status === s.status).map((i, idx) => /*#__PURE__*/_jsxDEV(ToDo, {\n                  item: i,\n                  index: idx,\n                  moveItem: moveItem,\n                  status: s\n                }, i.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 52\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n              addTask: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Title, \"Uq/YoZ43CBi40+7C5uYosmevsXU=\");\n\n_c = Title;\nexport default Title; // export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/pragatisingh/Desktop/ToDo/ToDo/ToDo/src/Title.js"],"names":["React","useState","ToDo","ToDoForm","DropWrapper","Container","Row","Col","data","statuses","Title","status","items","setItems","addTask","userInput","copy","id","length","title","onDrop","item","monitor","mapping","find","si","prevState","newItems","filter","i","concat","icon","moveItem","dragIndex","hoverIndex","idx","splice","map","s","color","textAlign","backgroundColor","borderRadius","padding"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\n// import data from './data.json';\n// import ToDoList from \"./ToDoList\";\nimport ToDo from \"./ToDo\";\nimport ToDoForm from './ToDoForm';\nimport DropWrapper from \"./DropWrapper\";\nimport {Container,Row,Col} from 'react-bootstrap';\nimport { data, statuses } from \"./data/index.js\";\nimport './ToDoStyle.css';\n\nconst Title = ({status}) => {\n  const [items, setItems] = useState(data);\n  const addTask = (userInput ) => {\n          let copy = [...items];\n          copy = [...copy, { \n              id: items.length + 1,\n              status: \"open\",\n              title: userInput }];\n          setItems(copy);\n        }\n\n  const onDrop = (item, monitor, status) => {\n      const mapping = statuses.find(si => si.status === status);\n\n      setItems(prevState => {\n          const newItems = prevState\n              .filter(i => i.id !== item.id)\n              .concat({ ...item, status, icon: mapping.icon });\n          return [ ...newItems ];\n      });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n      const item = items[dragIndex];\n      setItems(prevState => {\n          const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n          newItems.splice(hoverIndex, 0, item);\n          return  [ ...newItems ];\n      });\n  };\n\n  return (\n      <Container>\n      <Row>\n          {statuses.map(s => {\n              return (\n                         <> \n                          <div key={s.status}></div>\n        <h1 style={{color:\"white\",textAlign:\"center\"}}>{s.status}</h1>\n        <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n        <DropWrapper onDrop={onDrop} status={s.status}>\n                          <Col >\n                              {items\n                                  .filter(i => i.status === s.status)\n                                  .map((i, idx) => <ToDo key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\n                              }\n                          </Col>\n                      </DropWrapper>\n            <ToDoForm addTask={addTask}/>\n        </div>\n        </>\n              );\n          })}\n      </Row>\n      </Container>\n  )};\n\nexport default Title;\n\n// export default function Title({title}) {\n//     const [ toDoList, setToDoList ] = useState(data);\n//     // const handleToggle = (id) => {\n//     //     let mapped = toDoList.map(task => {\n//     //       return task.id === id ? { ...task, complete: !task.complete } : { ...task};\n//     //     });\n//     //     setToDoList(mapped);\n//     //   }\n\n//     // const handleFilter = () => {\n//     //   let filtered = toDoList.filter(task => {\n//     //     return !task.complete;\n//     //   });\n//     //   setToDoList(filtered);\n//     // }\n//     const addTask = (userInput ) => {\n//       let copy = [...toDoList];\n//       copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n//       setToDoList(copy);\n//     }\n    \n\n//     return (\n//         <>\n//         <h1 style={{color:\"white\",textAlign:\"center\"}}>{title}</h1>\n//         <div style={{backgroundColor:\"white\",borderRadius: \"21px\",padding:\"20px\"}}>\n//             <ToDoList toDoList={toDoList}/>\n//             {/* <ToDoList toDoList={toDoList} handleToggle={handleToggle}/> */}\n//             <ToDoForm addTask={addTask}/>\n//         </div>\n//         </>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}